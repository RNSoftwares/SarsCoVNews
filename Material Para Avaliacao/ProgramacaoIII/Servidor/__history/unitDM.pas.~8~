unit unitDM;

interface

uses
  System.SysUtils, System.Classes, uDWDataModule, FireDAC.Phys.PGDef,
  FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Error, FireDAC.UI.Intf,
  FireDAC.Phys.Intf, FireDAC.Stan.Def, FireDAC.Stan.Pool, FireDAC.Stan.Async,
  FireDAC.Phys, FireDAC.Phys.PG, FireDAC.FMXUI.Wait, Data.DB,
  FireDAC.Comp.Client, uDWJSONObject, uDWAbout, uRESTDWServerEvents, System.JSON,
  FireDAC.Stan.Param, FireDAC.DatS, FireDAC.DApt.Intf, FireDAC.DApt,
  FireDAC.Comp.DataSet;

type
  TDM = class(TServerMethodDataModule)
    FDPhysPgDriverLink1: TFDPhysPgDriverLink;
    FDConnection: TFDConnection;
    DWSEvents: TDWServerEvents;
    FDQUsuario: TFDQuery;
    procedure DWSEventsEventsValidarLoginReplyEvent(var Params: TDWParams;
      var Result: string);
    procedure DWSEventsEventsListarClientesReplyEvent(var Params: TDWParams;
      var Result: string);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  DM: TDM;

implementation

{%CLASSGROUP 'FMX.Controls.TControl'}

{$R *.dfm}


procedure TDM.DWSEventsEventsListarClientesReplyEvent(var Params: TDWParams;
  var Result: string);
// localhost:8082/ListarClientes
begin
  //xxxxx
end;

procedure TDM.DWSEventsEventsValidarLoginReplyEvent(var Params: TDWParams;
//http://localhost:8080/ValidarLogin?login=xxxxx&senha=xxxx
  var Result: string);
var
  json : TJSONObject;
begin

  try
    json:= TJsonObject.Create;
    if(Params.ItemsString['login'].AsString='')then
    begin
      // json -> {"retorno":"mensagem"}
      json.AddPair('retorno','Usuario não informado');
      Result:= json.ToString;
      exit;
    end;

    try
      FDQUsuario.Active:= false;
      FDQUsuario.SQL.Clear;
      FDQUsuario.SQL.Add('SELECT * FROM USUARIO WHERE LOGIN =:login AND SENHA =:senha');
      FDQUsuario.ParamByName('login').Value:= Params.ItemsString['login'].AsString;
      FDQUsuario.ParamByName('senha').Value:= Params.ItemsString['senha'].AsString;

      FDQUsuario.Active:= true;

      if(FDQUsuario.RecordCount > 0)then
        json.AddPair('retorno','OK')
      else
        json.AddPair('retorno', 'Usuario ou senha inválido');
      Result := json.ToString;

      except
        json.AddPair('retorno', 'Erro ao validar login');
        Result := json.ToString;
      end;
    finally
      json.DisposeOf;
    end;
  end;

end.
